@model ForDemo.Models.TicketRecordViewModel

@{ 
    ViewBag.Title = "待處理問題清單";
}
@using (Html.BeginForm("Query", "TicketRecord", FormMethod.Post, new { id = "TicketRecordForm", @class = "form-inline" }))
{
    @Html.AntiForgeryToken()
<div class="coltop10">
    <input type="hidden" id="Role" name="Role" value="@Session["Roles"]" class="form-control" /> 
    <div class="card container" style="margin-top:30px;">
        <div class="card-body">
            <div class="row justify-content-end" style="padding-top:5px;">
                <button id="Mt_Query" type="button" class="btn btn-m btn-primary mr-sm-2">
                    <i class="fas fa-search"></i>
                    &nbsp;&nbsp;
                    查詢
                </button>
                <button id="Mt_Clear" type="button" class="btn btn-m btn-secondary mr-sm-2">
                    <i class="fas fa-eraser"></i>
                    &nbsp;&nbsp;
                    清除
                </button>
                <button id="Mt_Create" type="button" class="btn btn-m btn-primary mr-sm-2" data-toggle="modal" data-target="#data-modal">
                    <i class="fas fa-plus-square"></i>
                    &nbsp;&nbsp;
                    新增
                </button>
            </div>
        </div>
    </div>
    <div style="display: flex; justify-content: center;">
    </div>
</div>
}

<div class="table-responsive-sm">
    <table id="DTList"> </table>
</div>

<!-- 新增 -->
<div class="modal fade" id="data-modal" tabindex="-1" role="dialog" aria-labelledby="create-modal-label" data-backdrop="static" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document" id="section1">
    </div>
</div> 
@section Scripts {
    <script>
        
        $(function () {
            var target = $('#DTList');
 
            $('#Mt_Query').click(function () {
                var param = $("#TicketRecordForm").serialize();
                target.bootstrapTable("destroy");
                CallAjax("TicketRecord/Query", "POST", "JSON", param).done(function (mydata) {
                    showMaintainDgvTable(target, JSON.parse(mydata)['rows'], GetGridColumn(), null);
                    target.show();
                });
            });
            $('#Mt_Create').click(function () { 
                var form = $('#TicketRecordForm');
                var token = $('input[name="__RequestVerificationToken"]', form).val(); 
                CallAjax("TicketRecord/Create", "POST", "json", { __RequestVerificationToken: token }).done(function (ret) {
                    $("#data-modal").modal('show');
                    $('#section1').html(ret);
                     
                    $('#btn_NewData').click(function () {
                        var param = $("#TicketRecordData").serialize();
                        CallAjax("TicketRecord/NewData", "POST", "JSON", param).done(function (result) {
                            alert('新增成功');
                            $("#data-modal").modal('hide');
                            target.bootstrapTable("destroy");
                            showMaintainDgvTable(target, JSON.parse(result)['rows'], GetGridColumn(), null);
                            target.show();
                        }); 
                    });

                }).fail(function () { console.log("error"); });
            }); 
            $('#Mt_Clear').click(function () { 
                target.bootstrapTable("destroy");
                showMaintainDgvTable(target, {}, GetGridColumn(), null);
                target.show();

            });  
            showMaintainDgvTable(target, {}, GetGridColumn(), null);
            target.show();  
             
        });
        function GetGridColumn() {
            //欄位定義
            var formColumn = [
                {
                    field: 'Edit',
                    title: '編輯',
                    align: 'center',
                    width: '25px',
                    clickToSelect: false,
                    events: window.operateEvents,
                    formatter: function (value, row, index) {
                        if (($('#Role').val() === 'RD') ||
                            (($('#Role').val() !== 'QA' && row.Ticket_Type === 2) ||
                                ($('#Role').val() !== 'PM' && row.Ticket_Type === 1))) {
                            return [''];
                        } else {
                            return ['<button type="button" class="edit btn btn-sm"  title="編輯"><i class="fas fa-edit"></i></button>'];
                        }
                    }
                },
                {
                    field: 'resolved',
                    title: '回復',
                    align: 'center',
                    width: '25px',
                    clickToSelect: false,
                    events: window.operateEvents,
                    formatter: function (value, row, index) {
                        if (($('#Role').val() !== 'QA' && row.Ticket_Type === 2) ||
                            $('#Role').val() !== 'RD' && (row.Ticket_Type === 0 || row.Ticket_Type === 1) ||
                            row.Ticket_Status === 1) {
                            return ['-'];
                        } else {
                            return ['<button type="button" class="resolved btn btn-sm" title="回復"><i class="fas fa-reply"></i></button>'];
                        }
                    }
                },
                {
                    field: 'DC',
                    title: '刪除',
                    align: 'center',
                    width: '25px',
                    clickToSelect: false,
                    events: window.operateEvents,
                    formatter: function (value, row, index) {
                        if (($('#Role').val() !== 'QA' && (row.Ticket_Type === 0 || row.Ticket_Type === 2)) ||
                            $('#Role').val() !== 'PM' && (row.Ticket_Type === 1)) {
                            return ['-'];
                        } else {
                            return ['<button type="button" class="remove btn btn-sm" title="刪除"><i class="far fa-trash-alt"></i></button>'];
                        }
                    }
                },
                {
                    field: 'Ticket_Seq',
                    visible: false,
                    align: 'left'
                },
                {
                    field: 'Ticket_Status',
                    title: '處理狀態',
                    sortable: true,
                    align: 'left',
                    cellStyle: formatTableUnit,
                    formatter: function (value, row, index) {
                        var arr = new Array();
                        if (row.Ticket_Status === 0) {
                            return ['<span>新建立</span>'];
                        } else if (row.Ticket_Status === 1) {
                            return ['<span>已解決</span>'];
                        } else {
                            return ['<span>-</span>'];
                        }
                    }
                },
                {
                    field: 'Ticket_Type',
                    title: '分類',
                    sortable: true,
                    align: 'left',
                    cellStyle: formatTableUnit,
                    formatter: function (value, row, index) {
                        var arr = new Array();
                        if (row.Ticket_Type === 0) {
                            return ['<span>BUG</span>'];
                        } else if (row.Ticket_Type === 1) {
                            return ['<span>需求</span>'];
                        } else if (row.Ticket_Type === 2) {
                            return ['<span>測試案例</span>'];
                        } else {
                            return ['<span>-</span>'];
                        }
                    }
                },
                {
                    field: 'Priority',
                    title: '優先級',
                    sortable: true,
                    align: 'left',
                    cellStyle: formatTableUnit,
                    formatter: function (value, row, index) {
                        var arr = new Array();
                        if (row.Priority === 0) {
                            return ['<span>低</span>'];
                        } else if (row.Priority === 1) {
                            return ['<span>中</span>'];
                        } else if (row.Priority === 2) {
                            return ['<span>高</span>'];
                        } else {
                            return ['<span>-</span>'];
                        }
                    }
                },
                {
                    field: 'Severity',
                    title: '嚴重性',
                    sortable: true,
                    align: 'left',
                    cellStyle: formatTableUnit,
                    formatter: function (value, row, index) {
                        var arr = new Array();
                        if (row.Severity === 0) {
                            return ['<span>低</span>'];
                        } else if (row.Severity === 1) {
                            return ['<span>中</span>'];
                        } else if (row.Severity === 2) {
                            return ['<span>高</span>'];
                        } else {
                            return ['<span>-</span>'];
                        }
                    }
                },
                {
                    field: 'Ticket_Title',
                    title: '主旨',
                    sortable: true,
                    align: 'left',
                    cellStyle: formatTableUnit,
                    formatter: paramsMatter
                },
                {
                    field: 'Ticket_Desc',
                    title: '內容描述',
                    sortable: true,
                    align: 'left',
                    cellStyle: formatTableUnit,
                    formatter: paramsMatter
                },
                {
                    field: 'Create_User',
                    title: '建立人員',
                    sortable: true,
                    align: 'left',
                    cellStyle: formatTableUnit,
                    formatter: paramsMatter
                },
                {
                    field: 'Create_Time',
                    title: '建立時間',
                    sortable: true,
                    align: 'left',
                    cellStyle: formatTableUnit,
                    formatter: paramsMatter
                },
                {
                    field: 'Modified_User',
                    title: '修改人員',
                    sortable: true,
                    align: 'left',
                    cellStyle: formatTableUnit,
                    formatter: paramsMatter
                },
                {
                    field: 'Modified_Time',
                    title: '修改時間',
                    sortable: true,
                    align: 'left',
                    cellStyle: formatTableUnit,
                    formatter: paramsMatter
                }
            ];

            return formColumn;
        }
        function showMaintainDgvTable(target, data, column, url) {
            //bootstrap table初始化数据
            target.bootstrapTable({
                contentType: 'application/json,charset=utf-8',
                showPaginationSwitch: true,
                classes: "table table-bordered table-striped table-hover clickable",
                rowStyle: 'rowStyle',
                theadClasses: "sampletable",
                pagination: true,
                search: true,
                //fixedColumns: true,
                //height: 630,
                pageSize: 10,
                pageList: [5, 10, 20, 50, 100],
                columns: column,
                data: data,
                url: url
            });
        }
        function formatTableUnit(value, row, index) {
            return {
                css: {
                    "white-space": "nowrap",
                    "text-overflow": "ellipsis",
                    "overflow": "hidden",
                    "max-width": "150px"
                }
            };
        }
        function paramsMatter(value, row, index) {
            var span = document.createElement("span");
            span.setAttribute("title", value);
            span.innerHTML = value;
            return span.outerHTML;
        } 
        function CallAjax(url, type, datatype, data, isasync = false) {
            return $.ajax({
                async: isasync,
                url: url,
                type: type,
                datatype: datatype,
                data: data

            });
        }

        window.operateEvents = {
            'click .edit': function (e, value, row, index) {
                var form = $('#TicketRecordForm');
                var token = $('input[name="__RequestVerificationToken"]', form).val();
                var data = row;
                data.__RequestVerificationToken = token;
                currIndex = index;
                CallAjax("TicketRecord/Create", "POST", "json", data).done(function (dataArr) {
                    $("#data-modal").modal('show');
                    $('#section1').html(dataArr);
                    $('#btn_NewData').click(function () {
                        var param = $("#TicketRecordData").serialize();
                        CallAjax("TicketRecord/SaveData", "POST", "JSON", param).done(function (result) {
                            alert('修改成功');
                            $("#data-modal").modal('hide');
                            $('#DTList').bootstrapTable("destroy");
                            showMaintainDgvTable($('#DTList'), JSON.parse(result)['rows'], GetGridColumn(), null);
                            $('#DTList').show();
                        });
                    });
                }).fail(function () { console.log("error"); });
            },
            'click .remove': function (e, value, row, index) {
                currIndex = index;
                var form = $('#TicketRecordForm');
                var token = $('input[name="__RequestVerificationToken"]', form).val();
                var data = {};
                data.__RequestVerificationToken = token;
                data.Ticket_Seq = row.Ticket_Seq;
                CallAjax("TicketRecord/RemoveData", "POST", "json", data).done(function (result) {
                    alert('刪除完畢!!');
                    $('#DTList').bootstrapTable("destroy");
                    showMaintainDgvTable($('#DTList'), JSON.parse(result)['rows'], GetGridColumn(), null);
                    $('#DTList').show();
                }).fail(function () { console.log("error"); });
            },
            'click .resolved': function (e, value, row, index) {
                currIndex = index;
                var form = $('#TicketRecordForm');
                var token = $('input[name="__RequestVerificationToken"]', form).val();
                var data = {};
                data.__RequestVerificationToken = token;
                data.Ticket_Seq = row.Ticket_Seq;
                CallAjax("TicketRecord/ResolvedData", "POST", "json", data).done(function (result) {
                    alert('已提交!!');
                    $('#DTList').bootstrapTable("destroy");
                    showMaintainDgvTable($('#DTList'), JSON.parse(result)['rows'], GetGridColumn(), null);
                    $('#DTList').show();
                }).fail(function () { console.log("error"); });
            }
        }
    </script>
}


